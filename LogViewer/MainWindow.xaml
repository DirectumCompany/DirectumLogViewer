<Window x:Class="LogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LogViewer"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Height="650" Width="1024" SizeToContent="Manual" WindowStartupLocation="CenterScreen" WindowState="Maximized" ContentRendered="Window_ContentRendered">

    <Window.Resources>
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2"
                                 Padding="0,0,25,0"/>
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1" Padding="0,0,25,0" >
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="FontStyle" Value="Italic"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <RoutedUICommand x:Key="SearchTextCommand" Text="Search text"  />
        <RoutedUICommand x:Key="CopyJsonCommand" Text="Copy as Json"  />
        <RoutedUICommand x:Key="PasteJsonCommand" Text="Paste Json-log"  />
        <RoutedUICommand x:Key="SaveAsJsonCommand" Text="Save Json-log"  />


        <Image x:Key="VisibilityImage" Source ="/Resources/visibility.png" Width="21" Height="21" />
        <Image x:Key="VisibilityOffImage" Source ="/Resources/visibilityOff.png" Width="21" Height="21" />


        <ContextMenu x:Key="RegexButton">
            <MenuItem x:Name="UseRegex" Header="Use regex" IsCheckable="True" IsChecked="{Binding Path=UseRegex}" Click="UseRegex_Click" />
            <Separator />
            <MenuItem Header="Regex examples">
                <MenuItem x:Name="RegexExample1" Header="A or B" Click="RegexExample1_Click"/>
                <MenuItem x:Name="RegexExample2" Header="A and B" Click="RegexExample2_Click"/>
                <MenuItem x:Name="RegexExample3" Header="A and B and !(C and D)" Click="RegexExample3_Click"/>
            </MenuItem>

        </ContextMenu>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding  Command="{StaticResource SearchTextCommand}" Executed="SearchText"  />
        <CommandBinding  Command="{StaticResource PasteJsonCommand}" Executed="PasteFromClipboard"  />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{StaticResource SearchTextCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl+Shift" Command="{StaticResource PasteJsonCommand}" />
     </Window.InputBindings>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="250" />
        </Grid.RowDefinitions>

        <ProgressBar x:Name="LoadBar" Grid.Row="0" Minimum="0" Maximum="100" Value="0" Height="5" Margin="0,-5,0,0" VerticalAlignment="Top" Panel.ZIndex="1" HorizontalAlignment="Stretch" Visibility="Hidden"/>

        <Grid Grid.Row="0" VerticalAlignment="Top" Margin="0,2,0,0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="LogsFileNames" Grid.Column="0" ItemsSource="{Binding}" HorizontalAlignment="Left"  VerticalAlignment="Center" Width="305" Height="25" Margin="0,0,0,0" FontSize="14" DisplayMemberPath="Name" SelectionChanged="Files_SelectionChanged">
            </ComboBox>

            <Label Grid.Column="1" Content="Tenant" FontStyle="Normal" FontSize="14" VerticalAlignment="Top" Margin="5,0,0,0"/>
            <ComboBox Grid.Column="2" x:Name="TenantFilter" HorizontalAlignment="Left"  VerticalAlignment="Center" FontStyle="Normal" Width="150" Height="24" FontSize="14" SelectionChanged="FilterTenant_SelectionChanged"/>

            <Label  Grid.Column="3" Content="Level" FontStyle="Normal" FontSize="14" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <ComboBox Grid.Column="4" x:Name="LevelFilter" HorizontalAlignment="Left"  VerticalAlignment="Center" FontStyle="Normal" Width="150" Height="24" FontSize="14" SelectionChanged="FilterLevel_SelectionChanged"/>
            
            <Label  Grid.Column="5" Content="Logger" FontStyle="Normal" FontSize="14" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <ComboBox Grid.Column="6" x:Name="LoggerFilter" HorizontalAlignment="Left"  VerticalAlignment="Center" FontStyle="Normal" Width="150" Height="24" FontSize="14" SelectionChanged="FilterLogger_SelectionChanged"/>


            <StackPanel Grid.Column="7" Orientation="Vertical" VerticalAlignment="Stretch" Margin="0,2,0,0">
                <Grid>
                    <TextBox x:Name="Filter" Style="{StaticResource placeHolder}" Tag="Filter.."  Text="" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" FontStyle="Normal" Margin="5,0,0,0" TextChanged="Filter_TextChanged" HorizontalAlignment="Stretch" Height="24"/>
                    <Button x:Name="RegexButton" Width="20" Height="20"  HorizontalAlignment="Right" Margin="0,0,2,0" Background="Transparent" BorderThickness="0" Click="RegexButton_Click" >
                        <Image Source="Resources/regex16.png" Stretch="None"/>
                    </Button>
                </Grid>
            </StackPanel>



            <ToggleButton x:Name="ColumnVisibilityToggleBtn" Grid.Column="9" Width="25" Height="25" Margin="5,0,0,0" Checked = "ColumnVisibilityCheck" Unchecked = "ColumnVisibilityUnchecked" HorizontalAlignment="Right">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Style.Triggers>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Content" Value ="{StaticResource VisibilityImage}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Content" Value ="{StaticResource VisibilityOffImage}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <Button Grid.Column="10" Width="25" Height="25" Margin="5,0,0,0" HorizontalAlignment="Right" Command="{StaticResource SearchTextCommand}" >
                <DockPanel>
                    <Image Source="Resources/find.png"/>
                </DockPanel>
            </Button>

            <Button Grid.Column="11" Width="25" Height="25" Margin="5,0,0,0" HorizontalAlignment="Right" Click="Settins_Click" >
                <DockPanel>
                    <Image Source="Resources/settings.png"/>
                </DockPanel>
            </Button>

        </Grid>

        <DataGrid x:Name="LogsGrid" Grid.Row="1" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FFC7C7C7" GridLinesVisibility="Horizontal" Margin="0,0,0,0" SelectionMode="Extended" RowHeight="20" SelectionChanged="LogsGrid_SelectionChanged" CanUserAddRows="false" CanUserDeleteRows="False" SelectionUnit="FullRow" >

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Level}" Value="Error">
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Level}" Value="Debug">
                            <Setter Property="Foreground" Value="Blue" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Level}" Value="Warn">
                            <Setter Property="Foreground" Value="#FFEC5600" />
                        </DataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <EventSetter Event="Control.RequestBringIntoView" Handler="LogsGrid_RequestBringIntoView"/>
                    <EventSetter Event="PreviewKeyDown" Handler="LogsGrid_PreviewKeyDown"/>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.CommandBindings>
                <CommandBinding Command="Copy" Executed="CopyCommand" />
                <CommandBinding Command="{StaticResource CopyJsonCommand}" Executed="CopyJsonCommand" />
                <CommandBinding Command="{StaticResource SaveAsJsonCommand}" Executed="SaveAsJsonCommand" />
            </DataGrid.CommandBindings>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="Copy" />
                    <MenuItem Header="Copy as Json" InputGestureText="Ctrl+Shift+C" Command="{StaticResource CopyJsonCommand}" />
                    <MenuItem Header="Save as Json-log" InputGestureText="Ctrl+Shift+S" Command="{StaticResource SaveAsJsonCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.InputBindings>
                <KeyBinding Key="C" Modifiers="Control" Command="Copy" />
                <KeyBinding Key="C" Modifiers="Control+Shift" Command="{StaticResource CopyJsonCommand}" />
                <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{StaticResource SaveAsJsonCommand}" />
            </DataGrid.InputBindings>


            <DataGrid.Columns>
                <DataGridTextColumn Header="Time" Binding="{Binding Path=Time, StringFormat='yyyy-MM-dd HH:mm:ss.fff'}" Width="145" IsReadOnly="True" CanUserSort="False"/>
                <DataGridTextColumn Header="Tenant" Binding="{Binding Path=Tenant}" Width="100" IsReadOnly="True" CanUserSort="False" Visibility="Collapsed"/>
                <DataGridTextColumn Header="Pid" Binding="{Binding Path=Pid}" Width="80" IsReadOnly="True" CanUserSort="False" Visibility="Collapsed"/>
                <DataGridTextColumn Header="Trace" Binding="{Binding Path=Trace}" Width="150" IsReadOnly="True" CanUserSort="False" Visibility="Collapsed"/>
                <DataGridTextColumn Header="Level" Binding="{Binding Path=Level}" Width="50" IsReadOnly="True" CanUserSort="False"/>
                <DataGridTextColumn Header="Logger" Binding="{Binding Path=Logger}" Width="110" IsReadOnly="True" CanUserSort="False"/>
                <DataGridTextColumn Header="Message" Binding="{Binding Path=Message}" Width="auto" IsReadOnly="True" CanUserSort="False" ScrollViewer.HorizontalScrollBarVisibility="Visible"/>

            </DataGrid.Columns>

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#007acc"/>

                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                   Color="#FFC9CBCD"/>
            </DataGrid.Resources>
        </DataGrid>

        <GridSplitter Grid.Row="2" Grid.ColumnSpan="3" Height="5"
        HorizontalAlignment="Stretch" VerticalAlignment="Center" />

        <TabControl x:Name="BottomTabControl" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="12" FontStyle="Normal">
            <TabItem x:Name="DetailsTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0">Details</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <TabItem.Content>
                    <TextBox x:Name="DetailText" Grid.Row="3" HorizontalAlignment="Stretch"  TextWrapping="NoWrap" VerticalAlignment="Stretch" FontSize="14" FontStyle="Normal" Margin="0,0,0,0"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            ScrollViewer.CanContentScroll="True" />
                </TabItem.Content>
            </TabItem>
            <TabItem x:Name="SearchTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0">Search results</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <TabItem.Content>
                    <DataGrid x:Name="SearchGrid" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FFC7C7C7" GridLinesVisibility="Horizontal" Margin="0,0,0,0" SelectionMode="Extended" RowHeight="20" CanUserAddRows="false" SelectionChanged="SearchGrid_SelectionChanged" >

                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Level}" Value="Error">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Level}" Value="Debug">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" Binding="{Binding Path=Time, StringFormat='yyyy-MM-dd HH:mm:ss.fff'}" Width="145" IsReadOnly="True" CanUserSort="False"/>
                            <DataGridTextColumn Header="Level" Binding="{Binding Path=Level}" Width="50" IsReadOnly="True" CanUserSort="False"/>
                            <DataGridTextColumn Header="Logger" Binding="{Binding Path=Logger}" Width="110" IsReadOnly="True" CanUserSort="False"/>
                            <DataGridTextColumn Header="Message" Binding="{Binding Path=Message}" Width="*" IsReadOnly="True" CanUserSort="False"/>
                        </DataGrid.Columns>

                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#007acc"/>

                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                   Color="#FFC9CBCD"/>
                        </DataGrid.Resources>

                    </DataGrid>
                </TabItem.Content>
            </TabItem>
        </TabControl>




        <tb:TaskbarIcon Visibility="Visible" 
      IconSource="Resources/horse_icon.ico" 
      ToolTipText="Json Log Viewer"
      MenuActivation="RightClick"
      PopupActivation="RightClick" TrayLeftMouseUp="TaskbarIcon_TrayLeftMouseUp">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="Exit_Click"
                    Header="Exit" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

    </Grid>






</Window>
